{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'MqttDashboard',\n  data() {\n    return {\n      mqttOptions: {\n        brokerUrl: '127.0.0.1',\n        port: 1884,\n        clientId: 'vue-client-' + Math.random().toString(16).substr(2, 8)\n      },\n      isConnected: false,\n      selectedTopic: '',\n      availableTopics: ['device/temperature', 'device/water_heater', 'device/light_control', 'device/surveillance_camera'],\n      //李浩勋 王睿涵\n      newTopic: '',\n      topicData: {},\n      subscribedTopics: [],\n      receivedMessages: []\n    };\n  },\n  methods: {\n    connectToMqtt() {\n      axios.post('http://127.0.0.1:5050/connect-mqtt', this.mqttOptions).then(res => {\n        this.isConnected = true;\n        console.log('Connection Successful:', res.data);\n      }).catch(err => {\n        console.error('Connection Failed:', err.response ? err.response.data : err.message);\n      });\n    },\n    subscribeAndNavigate() {\n      if (!this.selectedTopic) return;\n      axios.post('http://127.0.0.1:5050/subscribe', {\n        topic: this.selectedTopic\n      }).then(res => {\n        this.subscribedTopics.push(this.selectedTopic);\n        console.log('Subscription Successful:', res.data);\n        const deviceName = this.selectedTopic.split('/').pop();\n        if (this.selectedTopic === 'device/temperature') {\n          this.$router.push({\n            name: 'DevicePage',\n            params: {\n              deviceId: deviceName\n            }\n          });\n        } else if (this.selectedTopic === 'device/water_heater') {\n          this.$router.push({\n            name: 'WaterHeaterPage',\n            params: {\n              deviceId: deviceName\n            }\n          });\n        } else if (this.selectedTopic === 'device/light_control') {\n          //李浩勋\n          this.$router.push({\n            name: 'LightingControllerPage',\n            params: {\n              deviceId: deviceName\n            }\n          });\n        } else if (this.selectedTopic === 'device/surveillance_camera') {\n          this.$router.push({\n            name: 'SurveillanceCameraPage',\n            params: {\n              deviceId: deviceName\n            }\n          });\n        }\n      }).catch(err => {\n        console.error('Subscription Failed:', err);\n      });\n    },\n    fetchMessages() {\n      const topic = this.selectedTopic || this.subscribedTopics.slice(-1)[0];\n      if (!topic) return;\n      const deviceId = topic.split('/').pop();\n      axios.get(`http://127.0.0.1:5050/messages/${deviceId}`).then(res => {\n        this.receivedMessages = res.data.messages.map(msg => ({\n          topic,\n          message: typeof msg === 'string' ? msg : JSON.stringify(msg)\n        }));\n      }).catch(err => {\n        console.error('Failed to Fetch Messages:', err);\n      });\n    },\n    removeTopic(topic) {\n      this.subscribedTopics = this.subscribedTopics.filter(t => t !== topic);\n      this.$delete(this.topicData, topic);\n    },\n    goToDevice(topic) {\n      const deviceName = topic.split('/').pop();\n      if (topic === 'device/temperature') {\n        this.$router.push({\n          name: 'DevicePage',\n          params: {\n            deviceId: deviceName\n          }\n        });\n      } else if (topic === 'device/water_heater') {\n        this.$router.push({\n          name: 'WaterHeaterPage',\n          params: {\n            deviceId: deviceName\n          }\n        });\n      } else if (topic === 'device/light_control') {\n        //李浩勋\n        this.$router.push({\n          name: 'LightingControllerPage',\n          params: {\n            deviceId: deviceName\n          }\n        });\n      } else if (topic === 'device/surveillance_camera') {\n        this.$router.push({\n          name: 'SurveillanceCameraPage',\n          params: {\n            deviceId: deviceName\n          }\n        });\n      } //王睿涵\n    },\n    goBack() {\n      this.$router.push('/home');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","mqttOptions","brokerUrl","port","clientId","Math","random","toString","substr","isConnected","selectedTopic","availableTopics","newTopic","topicData","subscribedTopics","receivedMessages","methods","connectToMqtt","post","then","res","console","log","catch","err","error","response","message","subscribeAndNavigate","topic","push","deviceName","split","pop","$router","params","deviceId","fetchMessages","slice","get","messages","map","msg","JSON","stringify","removeTopic","filter","t","$delete","goToDevice","goBack"],"sources":["src/views/MqttDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <!-- MQTT Connection Configuration -->\n    <el-card class=\"card-section\">\n      <div slot=\"header\">\n        <el-icon><i class=\"el-icon-link\"></i></el-icon> MQTT Connection Configuration\n      </div>\n      <el-form :model=\"mqttOptions\" inline label-width=\"90px\">\n        <el-form-item label=\"Broker\">\n          <el-input v-model=\"mqttOptions.brokerUrl\" placeholder=\"127.0.0.1\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Port\">\n          <el-input v-model.number=\"mqttOptions.port\" placeholder=\"9001\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Client ID\">\n          <el-input v-model=\"mqttOptions.clientId\"></el-input>\n        </el-form-item>\n        <el-form-item class=\"button-container\">\n          <el-button type=\"primary\" @click=\"connectToMqtt\" class=\"connect-button\">Connect</el-button>\n          <el-tag :type=\"isConnected? 'success' : 'danger'\" effect=\"dark\" class=\"status-tag\">\n            {{ isConnected? 'Connected' : 'Not Connected' }}\n          </el-tag>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <!-- Subscription Topic -->\n    <el-card class=\"card-section\">\n      <div slot=\"header\">\n        <el-icon><i class=\"el-icon-s-promotion\"></i></el-icon> Subscription Theme\n      </div>\n      <el-form inline>\n        <el-form-item label=\"Topic\">\n          <el-select v-model=\"selectedTopic\" placeholder=\"Select Topic\">\n            <el-option v-for=\"topic in availableTopics\" :key=\"topic\" :label=\"topic\" :value=\"topic\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"success\" @click=\"subscribeAndNavigate\" :disabled=\"!isConnected\">Subscribe</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"fetchMessages\" :disabled=\"!isConnected\">Get Message</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"topic-tags\">\n        <el-tag v-for=\"topic in subscribedTopics\" :key=\"topic\" closable @close=\"removeTopic(topic)\"\n          @click=\"goToDevice(topic)\" type=\"info\" class=\"topic-tag\">\n          {{ topic }}\n        </el-tag>\n      </div>\n    </el-card>\n    <!-- Received Messages Table -->\n    <el-card v-if=\"receivedMessages.length > 0\" class=\"card-section\">\n      <div slot=\"header\">\n        <el-icon><i class=\"el-icon-message\"></i></el-icon> Received Messages\n      </div>\n      <el-table :data=\"receivedMessages\" border style=\"width: 100%\">\n        <el-table-column prop=\"topic\" label=\"Topic\" width=\"200\" />\n        <el-table-column prop=\"message\" label=\"Message Content\" />\n      </el-table>\n    </el-card>\n    <!-- Subscribed Device Data (Clickable) -->\n    <el-card v-for=\"(data, topic) in topicData\" :key=\"topic\" class=\"card-section shadow-card\">\n      <div slot=\"header\">{{ topic }}</div>\n      <el-table :data=\"Object.entries(data)\" border stripe style=\"width: 100%\">\n        <el-table-column label=\"Field\" prop=\"0\" />\n        <el-table-column label=\"Value\" prop=\"1\" />\n        <el-table-column label=\"Action\">\n          <template>\n            <el-button type=\"primary\" size=\"mini\" @click=\"goToDevice(topic)\">View</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n    <!-- Child Route Page -->\n    <router-view />\n    <!-- Back Button -->\n    <div class=\"back-container\">\n      <el-button type=\"primary\" @click=\"goBack\" round>Back</el-button>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'MqttDashboard',\n  data() {\n    return {\n      mqttOptions: {\n        brokerUrl: '127.0.0.1',\n        port: 1884,\n        clientId: 'vue-client-' + Math.random().toString(16).substr(2, 8)\n      },\n      isConnected: false,\n      selectedTopic: '',\n      availableTopics: ['device/temperature', 'device/water_heater','device/light_control', 'device/surveillance_camera'],  //李浩勋 王睿涵\n      newTopic: '',\n      topicData: {},\n      subscribedTopics: [],\n      receivedMessages: []\n    }\n  },\n  methods: {\n    connectToMqtt() {\n      axios.post('http://127.0.0.1:5050/connect-mqtt', this.mqttOptions)\n      .then(res => {\n          this.isConnected = true\n          console.log('Connection Successful:', res.data)\n        })\n      .catch(err => {\n          console.error('Connection Failed:', err.response? err.response.data : err.message)\n        })\n    },\n    subscribeAndNavigate() {\n      if (!this.selectedTopic) return\n      axios.post('http://127.0.0.1:5050/subscribe', { topic: this.selectedTopic })\n      .then(res => {\n          this.subscribedTopics.push(this.selectedTopic)\n          console.log('Subscription Successful:', res.data)\n          const deviceName = this.selectedTopic.split('/').pop()\n          if (this.selectedTopic === 'device/temperature') {\n            this.$router.push({ name: 'DevicePage', params: { deviceId: deviceName } })\n          } else if (this.selectedTopic === 'device/water_heater') {\n            this.$router.push({ name: 'WaterHeaterPage', params: { deviceId: deviceName } })\n          }\n           else if (this.selectedTopic === 'device/light_control') {          //李浩勋\n            this.$router.push({ name: 'LightingControllerPage', params: { deviceId: deviceName } })\n          }\n          else if (this.selectedTopic === 'device/surveillance_camera') { \n            this.$router.push({ name: 'SurveillanceCameraPage', params: { deviceId: deviceName } })\n          }\n        })\n      .catch(err => {\n          console.error('Subscription Failed:', err)\n        })\n    },\n    fetchMessages() {\n      const topic = this.selectedTopic || this.subscribedTopics.slice(-1)[0]\n      if (!topic) return\n      const deviceId = topic.split('/').pop()\n      axios.get(`http://127.0.0.1:5050/messages/${deviceId}`)\n      .then(res => {\n          this.receivedMessages = res.data.messages.map(msg => ({\n            topic,\n            message: typeof msg === 'string'? msg : JSON.stringify(msg)\n          }))\n        })\n      .catch(err => {\n          console.error('Failed to Fetch Messages:', err)\n        })\n    },\n    removeTopic(topic) {\n      this.subscribedTopics = this.subscribedTopics.filter(t => t!== topic)\n      this.$delete(this.topicData, topic)\n    },\n    goToDevice(topic) {\n      const deviceName = topic.split('/').pop()\n      if (topic === 'device/temperature') {\n        this.$router.push({ name: 'DevicePage', params: { deviceId: deviceName } })\n      } else if (topic === 'device/water_heater') {\n        this.$router.push({ name: 'WaterHeaterPage', params: { deviceId: deviceName } })\n      }else if (topic === 'device/light_control') {       //李浩勋\n        this.$router.push({ name: 'LightingControllerPage', params: { deviceId: deviceName } })\n      }\n      else if (topic === 'device/surveillance_camera') {\n        this.$router.push({ name: 'SurveillanceCameraPage', params: { deviceId: deviceName } })\n      }//王睿涵\n    },\n    goBack() {\n      this.$router.push('/home')\n    }\n  }\n}\n</script>\n<style scoped>\n.container {\n  padding: 20px;\n}\n.card-section {\n  margin-bottom: 24px;\n}\n.topic-tag {\n  margin: 6px 4px;\n  cursor: pointer;\n}\n.shadow-card {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n}\n.topic-tags {\n  margin-top: 10px;\n}\n.back-container {\n  margin-top: 40px;\n  text-align: center;\n}\n/* Center-align the Connect button and status tag */\n.button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n.connect-button {\n  margin-right: 10px;\n}\n.status-tag {\n  height: 40px;\n  line-height: 38px;\n}\n</style>"],"mappings":";;;;AAmFA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;QACAC,SAAA;QACAC,IAAA;QACAC,QAAA,kBAAAC,IAAA,CAAAC,MAAA,GAAAC,QAAA,KAAAC,MAAA;MACA;MACAC,WAAA;MACAC,aAAA;MACAC,eAAA;MAAA;MACAC,QAAA;MACAC,SAAA;MACAC,gBAAA;MACAC,gBAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACAnB,KAAA,CAAAoB,IAAA,4CAAAjB,WAAA,EACAkB,IAAA,CAAAC,GAAA;QACA,KAAAX,WAAA;QACAY,OAAA,CAAAC,GAAA,2BAAAF,GAAA,CAAApB,IAAA;MACA,GACAuB,KAAA,CAAAC,GAAA;QACAH,OAAA,CAAAI,KAAA,uBAAAD,GAAA,CAAAE,QAAA,GAAAF,GAAA,CAAAE,QAAA,CAAA1B,IAAA,GAAAwB,GAAA,CAAAG,OAAA;MACA;IACA;IACAC,qBAAA;MACA,UAAAlB,aAAA;MACAZ,KAAA,CAAAoB,IAAA;QAAAW,KAAA,OAAAnB;MAAA,GACAS,IAAA,CAAAC,GAAA;QACA,KAAAN,gBAAA,CAAAgB,IAAA,MAAApB,aAAA;QACAW,OAAA,CAAAC,GAAA,6BAAAF,GAAA,CAAApB,IAAA;QACA,MAAA+B,UAAA,QAAArB,aAAA,CAAAsB,KAAA,MAAAC,GAAA;QACA,SAAAvB,aAAA;UACA,KAAAwB,OAAA,CAAAJ,IAAA;YAAA/B,IAAA;YAAAoC,MAAA;cAAAC,QAAA,EAAAL;YAAA;UAAA;QACA,gBAAArB,aAAA;UACA,KAAAwB,OAAA,CAAAJ,IAAA;YAAA/B,IAAA;YAAAoC,MAAA;cAAAC,QAAA,EAAAL;YAAA;UAAA;QACA,OACA,SAAArB,aAAA;UAAA;UACA,KAAAwB,OAAA,CAAAJ,IAAA;YAAA/B,IAAA;YAAAoC,MAAA;cAAAC,QAAA,EAAAL;YAAA;UAAA;QACA,OACA,SAAArB,aAAA;UACA,KAAAwB,OAAA,CAAAJ,IAAA;YAAA/B,IAAA;YAAAoC,MAAA;cAAAC,QAAA,EAAAL;YAAA;UAAA;QACA;MACA,GACAR,KAAA,CAAAC,GAAA;QACAH,OAAA,CAAAI,KAAA,yBAAAD,GAAA;MACA;IACA;IACAa,cAAA;MACA,MAAAR,KAAA,QAAAnB,aAAA,SAAAI,gBAAA,CAAAwB,KAAA;MACA,KAAAT,KAAA;MACA,MAAAO,QAAA,GAAAP,KAAA,CAAAG,KAAA,MAAAC,GAAA;MACAnC,KAAA,CAAAyC,GAAA,mCAAAH,QAAA,IACAjB,IAAA,CAAAC,GAAA;QACA,KAAAL,gBAAA,GAAAK,GAAA,CAAApB,IAAA,CAAAwC,QAAA,CAAAC,GAAA,CAAAC,GAAA;UACAb,KAAA;UACAF,OAAA,SAAAe,GAAA,gBAAAA,GAAA,GAAAC,IAAA,CAAAC,SAAA,CAAAF,GAAA;QACA;MACA,GACAnB,KAAA,CAAAC,GAAA;QACAH,OAAA,CAAAI,KAAA,8BAAAD,GAAA;MACA;IACA;IACAqB,YAAAhB,KAAA;MACA,KAAAf,gBAAA,QAAAA,gBAAA,CAAAgC,MAAA,CAAAC,CAAA,IAAAA,CAAA,KAAAlB,KAAA;MACA,KAAAmB,OAAA,MAAAnC,SAAA,EAAAgB,KAAA;IACA;IACAoB,WAAApB,KAAA;MACA,MAAAE,UAAA,GAAAF,KAAA,CAAAG,KAAA,MAAAC,GAAA;MACA,IAAAJ,KAAA;QACA,KAAAK,OAAA,CAAAJ,IAAA;UAAA/B,IAAA;UAAAoC,MAAA;YAAAC,QAAA,EAAAL;UAAA;QAAA;MACA,WAAAF,KAAA;QACA,KAAAK,OAAA,CAAAJ,IAAA;UAAA/B,IAAA;UAAAoC,MAAA;YAAAC,QAAA,EAAAL;UAAA;QAAA;MACA,WAAAF,KAAA;QAAA;QACA,KAAAK,OAAA,CAAAJ,IAAA;UAAA/B,IAAA;UAAAoC,MAAA;YAAAC,QAAA,EAAAL;UAAA;QAAA;MACA,OACA,IAAAF,KAAA;QACA,KAAAK,OAAA,CAAAJ,IAAA;UAAA/B,IAAA;UAAAoC,MAAA;YAAAC,QAAA,EAAAL;UAAA;QAAA;MACA;IACA;IACAmB,OAAA;MACA,KAAAhB,OAAA,CAAAJ,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}