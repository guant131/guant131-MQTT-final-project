{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      historyData: [],\n      displayedHistoryData: [],\n      maxFps: null,\n      maxFpsTime: null,\n      minFps: null,\n      minFpsTime: null,\n      searchTime: '',\n      searchResult: null,\n      searchPerformed: false\n    };\n  },\n  created() {\n    this.fetchHistoryData();\n  },\n  methods: {\n    fetchHistoryData() {\n      axios.get('http://localhost:5050/api/history/fps').then(res => {\n        this.historyData = res.data.history || [];\n        this.displayedHistoryData = this.historyData.slice(0, 30);\n        this.calculateFpsInfo();\n      }).catch(err => {\n        console.error('Failed to fetch history data:', err);\n      });\n    },\n    goBack() {\n      this.$router.back();\n    },\n    calculateFpsInfo() {\n      if (this.historyData.length === 0) {\n        return;\n      }\n      let maxFps = this.historyData[0].fps;\n      let maxFpsTime = this.historyData[0].timestamp;\n      let minFps = this.historyData[0].fps;\n      let minFpsTime = this.historyData[0].timestamp;\n      for (let data of this.historyData) {\n        if (data.fps > maxFps) {\n          maxFps = data.fps;\n          maxFpsTime = data.timestamp;\n        }\n        if (data.fps < minFps) {\n          minFps = data.fps;\n          minFpsTime = data.timestamp;\n        }\n      }\n      this.maxFps = maxFps;\n      this.maxFpsTime = maxFpsTime;\n      this.minFps = minFps;\n      this.minFpsTime = minFpsTime;\n    },\n    searchByTime() {\n      this.searchPerformed = true;\n      this.searchResult = this.historyData.find(data => data.timestamp === this.searchTime);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","historyData","displayedHistoryData","maxFps","maxFpsTime","minFps","minFpsTime","searchTime","searchResult","searchPerformed","created","fetchHistoryData","methods","get","then","res","history","slice","calculateFpsInfo","catch","err","console","error","goBack","$router","back","length","fps","timestamp","searchByTime","find"],"sources":["src/views/SurveillanceCameraHistory.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"header-container\">\n      <h2>Surveillance Camera History Data</h2>\n      <el-button size=\"small\" type=\"primary\" @click=\"fetchHistoryData\">Refresh</el-button>\n    </div>\n    <!-- Newly added FPS information window -->\n    <el-card class=\"fps-info-card\">\n      <div slot=\"header\">FPS Information</div>\n      <div class=\"info-content\">\n        <p>Max FPS: {{ maxFps }} at {{ maxFpsTime }}</p>\n        <p>Min FPS: {{ minFps }} at {{ minFpsTime }}</p>\n      </div>\n    </el-card>\n    <!-- Newly added time search window -->\n    <el-card class=\"search-info-card\">\n      <div slot=\"header\">Search by Time</div>\n      <div class=\"info-content\">\n        <el-input v-model=\"searchTime\" placeholder=\"Enter timestamp\" @keyup.enter=\"searchByTime\"></el-input>\n        <el-button @click=\"searchByTime\">Search</el-button>\n        <p v-if=\"searchResult\">FPS: {{ searchResult.fps }}</p>\n        <p v-else-if=\"searchPerformed &&!searchResult\">No data found for the given time.</p>\n      </div>\n    </el-card>\n    <el-card>\n      <div slot=\"header\">History Data List</div>\n      <div class=\"history-data-scroll\">\n        <table class=\"history-table\">\n          <thead>\n            <tr>\n              <th>FPS</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(data, index) in displayedHistoryData\" :key=\"index\">\n              <td>{{ data.fps }}</td>\n              <td>{{ data.timestamp }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </el-card>\n    <div class=\"back-container\">\n      <el-button type=\"primary\" round @click=\"goBack\">Back</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      historyData: [],\n      displayedHistoryData: [],\n      maxFps: null,\n      maxFpsTime: null,\n      minFps: null,\n      minFpsTime: null,\n      searchTime: '',\n      searchResult: null,\n      searchPerformed: false\n    };\n  },\n  created() {\n    this.fetchHistoryData();\n  },\n  methods: {\n    fetchHistoryData() {\n      axios.get('http://localhost:5050/api/history/fps')\n        .then(res => {\n          this.historyData = res.data.history || [];\n          this.displayedHistoryData = this.historyData.slice(0, 30);\n          this.calculateFpsInfo();\n        })\n        .catch(err => {\n          console.error('Failed to fetch history data:', err);\n        });\n    },\n    goBack() {\n      this.$router.back();\n    },\n    calculateFpsInfo() {\n      if (this.historyData.length === 0) {\n        return;\n      }\n      let maxFps = this.historyData[0].fps;\n      let maxFpsTime = this.historyData[0].timestamp;\n      let minFps = this.historyData[0].fps;\n      let minFpsTime = this.historyData[0].timestamp;\n\n      for (let data of this.historyData) {\n        if (data.fps > maxFps) {\n          maxFps = data.fps;\n          maxFpsTime = data.timestamp;\n        }\n        if (data.fps < minFps) {\n          minFps = data.fps;\n          minFpsTime = data.timestamp;\n        }\n      }\n\n      this.maxFps = maxFps;\n      this.maxFpsTime = maxFpsTime;\n      this.minFps = minFps;\n      this.minFpsTime = minFpsTime;\n    },\n    searchByTime() {\n      this.searchPerformed = true;\n      this.searchResult = this.historyData.find(data => data.timestamp === this.searchTime);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.header-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.fps-info-card,\n.search-info-card {\n  margin-bottom: 20px;\n}\n\n.info-content {\n  padding: 10px;\n}\n\n.history-data-scroll {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.history-table th,\n.history-table td {\n  border: 1px solid #ccc;\n  padding: 8px;\n  text-align: center;\n}\n\n.back-container {\n  margin-top: 40px;\n  text-align: center;\n}\n</style>"],"mappings":";;AAkDA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,oBAAA;MACAC,MAAA;MACAC,UAAA;MACAC,MAAA;MACAC,UAAA;MACAC,UAAA;MACAC,YAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,iBAAA;MACAZ,KAAA,CAAAc,GAAA,0CACAC,IAAA,CAAAC,GAAA;QACA,KAAAd,WAAA,GAAAc,GAAA,CAAAf,IAAA,CAAAgB,OAAA;QACA,KAAAd,oBAAA,QAAAD,WAAA,CAAAgB,KAAA;QACA,KAAAC,gBAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,KAAA,kCAAAF,GAAA;MACA;IACA;IACAG,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAP,iBAAA;MACA,SAAAjB,WAAA,CAAAyB,MAAA;QACA;MACA;MACA,IAAAvB,MAAA,QAAAF,WAAA,IAAA0B,GAAA;MACA,IAAAvB,UAAA,QAAAH,WAAA,IAAA2B,SAAA;MACA,IAAAvB,MAAA,QAAAJ,WAAA,IAAA0B,GAAA;MACA,IAAArB,UAAA,QAAAL,WAAA,IAAA2B,SAAA;MAEA,SAAA5B,IAAA,SAAAC,WAAA;QACA,IAAAD,IAAA,CAAA2B,GAAA,GAAAxB,MAAA;UACAA,MAAA,GAAAH,IAAA,CAAA2B,GAAA;UACAvB,UAAA,GAAAJ,IAAA,CAAA4B,SAAA;QACA;QACA,IAAA5B,IAAA,CAAA2B,GAAA,GAAAtB,MAAA;UACAA,MAAA,GAAAL,IAAA,CAAA2B,GAAA;UACArB,UAAA,GAAAN,IAAA,CAAA4B,SAAA;QACA;MACA;MAEA,KAAAzB,MAAA,GAAAA,MAAA;MACA,KAAAC,UAAA,GAAAA,UAAA;MACA,KAAAC,MAAA,GAAAA,MAAA;MACA,KAAAC,UAAA,GAAAA,UAAA;IACA;IACAuB,aAAA;MACA,KAAApB,eAAA;MACA,KAAAD,YAAA,QAAAP,WAAA,CAAA6B,IAAA,CAAA9B,IAAA,IAAAA,IAAA,CAAA4B,SAAA,UAAArB,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}