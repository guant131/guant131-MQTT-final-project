{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      manualMode: false,\n      lightingStatus: \"N/A\",\n      waterHeaterStatus: \"N/A\",\n      heaterButtonText: \"Turn On\",\n      statusMapping: {\n        brighter: \"BRIGHTER\",\n        dimmer: \"DIMMER\",\n        off: \"OFF\",\n        on: \"ON\"\n      },\n      dialogVisible: false,\n      deviceData: {},\n      currentDevice: \"\",\n      lightingData: {},\n      waterHeaterData: {},\n      cameraStatus: \"N/A\",\n      cameraData: {},\n      showCameraData: false,\n      cameraStream: null,\n      showLightingData: false,\n      showWaterHeaterData: false,\n      coolingStatus: \"N/A\",\n      dehumidifyingStatus: \"N/A\",\n      airConditionerData: {},\n      showAirData: false,\n      fixedStatus: {\n        lighting: null,\n        water_heater: null\n      }\n    };\n  },\n  methods: {\n    toggleManualMode() {\n      console.log(`[模式切换] 当前模式: ${this.manualMode ? 'Manual' : 'Auto'}`);\n      if (!this.manualMode) {\n        // ✅ 切换到自动模式\n        console.log(\"[切换到自动模式] 状态重置为 N/A\");\n\n        // 🔄 所有设备状态重置\n        this.lightingStatus = \"N/A\";\n        this.waterHeaterStatus = \"N/A\";\n        this.coolingStatus = \"N/A\";\n        this.dehumidifyingStatus = \"N/A\";\n        this.heaterButtonText = \"Turn On\";\n\n        // 🔄 清除本地存储\n        localStorage.setItem(\"manualMode\", \"false\");\n        localStorage.removeItem(\"lightingStatus\");\n        localStorage.removeItem(\"waterHeaterStatus\");\n        localStorage.removeItem(\"coolingStatus\");\n        localStorage.removeItem(\"dehumidifyingStatus\");\n\n        // 🔄 清除固定显示状态\n        this.fixedStatus = {\n          lighting: null,\n          water_heater: null\n        };\n\n        // ✅ 同步后端：切换为自动模式\n        axios.post(\"http://localhost:5050/api/device/toggle-mode\", {\n          manual_mode: \"off\"\n        }).then(response => {\n          console.log(\"[后端同步] 切换为自动模式:\", response.data.message);\n        }).catch(error => {\n          console.error(\"[错误] 切换到自动模式失败:\", error);\n        });\n      } else {\n        // ✅ 切换到手动模式\n        console.log(\"[切换到手动模式] 恢复本地存储的状态\");\n\n        // 🔄 恢复灯光与热水器状态\n        const lightingState = localStorage.getItem(\"lightingStatus\");\n        const heaterState = localStorage.getItem(\"waterHeaterStatus\");\n        this.lightingStatus = lightingState ? lightingState : \"OFF\";\n        this.waterHeaterStatus = heaterState ? heaterState : \"OFF\";\n        this.heaterButtonText = this.waterHeaterStatus === \"ON\" ? \"Turn Off\" : \"Turn On\";\n\n        // 🔄 恢复空调 cooling / dehumidifying 状态\n        const coolingState = localStorage.getItem(\"coolingStatus\");\n        const dehumidifyState = localStorage.getItem(\"dehumidifyingStatus\");\n        this.coolingStatus = coolingState ? coolingState : \"OFF\";\n        this.dehumidifyingStatus = dehumidifyState ? dehumidifyState : \"OFF\";\n\n        // 🔄 写入本地存储\n        localStorage.setItem(\"manualMode\", \"true\");\n        localStorage.setItem(\"lightingStatus\", this.lightingStatus);\n        localStorage.setItem(\"waterHeaterStatus\", this.waterHeaterStatus);\n        localStorage.setItem(\"coolingStatus\", this.coolingStatus);\n        localStorage.setItem(\"dehumidifyingStatus\", this.dehumidifyingStatus);\n\n        // 🔄 初始化固定显示状态（用于 View Data）\n        this.updateFixedStatus(\"lighting\", this.lightingStatus);\n        this.updateFixedStatus(\"water_heater\", this.waterHeaterStatus);\n\n        // ✅ 同步后端：切换为手动模式\n        axios.post(\"http://localhost:5050/api/device/toggle-mode\", {\n          manual_mode: \"on\"\n        }).then(response => {\n          console.log(\"[后端同步] 切换为手动模式:\", response.data.message);\n        }).catch(error => {\n          console.error(\"[错误] 切换到手动模式失败:\", error);\n        });\n      }\n    },\n    setCooling(state) {\n      this.coolingStatus = state;\n      localStorage.setItem(\"coolingStatus\", state);\n      this.syncCurrentState(\"aircon\", `COOLING_${state}`);\n    },\n    setDehumidifying(state) {\n      this.dehumidifyingStatus = state;\n      localStorage.setItem(\"dehumidifyingStatus\", state);\n      this.syncCurrentState(\"aircon\", `DEHUMIDIFYING_${state}`);\n    },\n    enableCamera() {\n      if (!this.manualMode || this.cameraStatus === \"on\") return;\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        this.cameraStream = stream;\n        this.cameraStatus = \"on\";\n\n        // 👇 不再强制控制 showCameraData，仅控制摄像头状态\n        this.$nextTick(() => {\n          const video = this.$refs.cameraVideo;\n          if (video) {\n            video.srcObject = stream;\n            video.play();\n          } else {\n            console.warn(\"cameraVideo ref not found — video element not rendered yet.\");\n          }\n        });\n\n        // axios.post(\"http://localhost:5050/api/device/camera/start\");\n      }).catch(err => {\n        console.error(\"Failed to enable camera:\", err);\n      });\n    },\n    disableCamera() {\n      if (this.cameraStream) {\n        this.cameraStream.getTracks().forEach(track => track.stop());\n        this.cameraStream = null;\n      }\n      this.cameraStatus = \"off\";\n\n      // ✅ 清除视频画面\n      if (this.$refs.cameraVideo) {\n        this.$refs.cameraVideo.srcObject = null;\n      }\n\n      // ❌ 不再关闭 showCameraData，这样 View Data 区块可单独控制\n      // axios.post(\"http://localhost:5050/api/device/camera/stop\");\n    },\n    viewDeviceData(device) {\n      if (device === \"camera\") {\n        axios.get(\"http://localhost:5050/api/device/camera/manual-state\").then(stateRes => {\n          const manual = stateRes.data.manual_override;\n          axios.get(\"http://localhost:5050/api/realtime-db/fps\").then(res => {\n            const data = res.data;\n            data.status = manual === \"on\" ? this.cameraStatus : \"N/A\";\n            this.cameraData = data;\n            this.showCameraData = true;\n          });\n        });\n        return;\n      }\n\n      // ✅ 空调强制使用固定接口路径，避免动态拼接出错\n      const url = device === \"aircon\" ? \"http://localhost:5050/api/device/aircon/view-data\" : `http://localhost:5050/api/device/${device}/view-data`;\n      axios.get(url).then(response => {\n        const originalData = response.data;\n        axios.get(`http://localhost:5050/api/device/${device}/manual-state`).then(stateRes => {\n          const status = stateRes.data.status;\n          const manual = stateRes.data.manual_override;\n          if (device === \"lighting\" && manual === \"on\") {\n            this.updateFixedStatus(device, status);\n            originalData.status = this.fixedStatus.lighting;\n          }\n          if (device === \"water_heater\" && manual === \"on\") {\n            this.updateFixedStatus(device, status);\n            originalData.status = this.fixedStatus.water_heater;\n          }\n          if (device === \"aircon\" && manual === \"on\") {\n            originalData.cooling_status = this.coolingStatus;\n            originalData.dehumidifying_status = this.dehumidifyingStatus;\n          }\n          if (device === \"lighting\") {\n            this.lightingData = originalData;\n            this.showLightingData = true;\n          } else if (device === \"water_heater\") {\n            this.waterHeaterData = originalData;\n            this.showWaterHeaterData = true;\n          } else if (device === \"aircon\") {\n            this.airConditionerData = originalData;\n            this.showAirData = true;\n          }\n        });\n      });\n    },\n    refreshDeviceData(device) {\n      if (device === \"camera\") {\n        this.viewDeviceData(\"camera\");\n        return;\n      }\n      const url = device === \"aircon\" ? \"http://localhost:5050/api/device/aircon/view-data\" : `http://localhost:5050/api/device/${device}/view-data`;\n      axios.get(url).then(response => {\n        const refreshed = response.data;\n        axios.get(`http://localhost:5050/api/device/${device}/manual-state`).then(res => {\n          const manual = res.data.manual_override;\n          const status = res.data.status;\n          if (manual === \"on\") {\n            this.updateFixedStatus(device, status);\n            if (device === \"lighting\") {\n              refreshed.status = this.fixedStatus.lighting;\n            } else if (device === \"water_heater\") {\n              refreshed.status = this.fixedStatus.water_heater;\n            } else if (device === \"aircon\") {\n              refreshed.cooling_status = this.coolingStatus;\n              refreshed.dehumidifying_status = this.dehumidifyingStatus;\n            }\n          }\n          if (device === \"lighting\") {\n            this.lightingData = refreshed;\n          } else if (device === \"water_heater\") {\n            this.waterHeaterData = refreshed;\n          } else if (device === \"aircon\") {\n            this.airConditionerData = refreshed;\n          }\n        });\n      });\n    },\n    syncLightingStatus() {\n      axios.get(\"http://localhost:5050/api/device/lighting/manual-state\").then(res => {\n        const status = res.data.status;\n        const manual = res.data.manual_override;\n        if (manual === \"on\") {\n          this.updateFixedStatus(\"lighting\", status);\n          this.lightingStatus = status; // ✅ 使用原始状态显示在方框\n        }\n      });\n    },\n    syncWaterHeaterStatus() {\n      axios.get(\"http://localhost:5050/api/device/water_heater/manual-state\").then(res => {\n        const status = res.data.status;\n        const manual = res.data.manual_override;\n        if (manual === \"on\") {\n          this.updateFixedStatus(\"water_heater\", status);\n          this.waterHeaterStatus = status; // ✅ 使用原始状态显示在方框\n          this.heaterButtonText = status === \"ON\" ? \"Turn Off\" : \"Turn On\";\n        }\n      });\n    },\n    syncAirconStatus() {\n      axios.get(\"http://localhost:5050/api/device/aircon/manual-state\").then(res => {\n        const manual = res.data.manual_override;\n        if (manual === \"on\") {\n          this.coolingStatus = res.data.cooling_status || \"ON\";\n          this.dehumidifyingStatus = res.data.dehumidifying_status || \"ON\";\n        }\n      });\n    },\n    updateFixedStatus(device, status) {\n      if (device === \"lighting\") {\n        if (status === \"BRIGHTER\") {\n          this.fixedStatus.lighting = \"on (Brighter)\";\n        } else if (status === \"DIMMER\") {\n          this.fixedStatus.lighting = \"on (Dimmer)\";\n        } else if (status === \"OFF\") {\n          this.fixedStatus.lighting = \"off\";\n        }\n      } else if (device === \"water_heater\") {\n        if (status === \"ON\") {\n          this.fixedStatus.water_heater = \"running\";\n        } else if (status === \"OFF\") {\n          this.fixedStatus.water_heater = \"stopped\";\n        }\n      }\n    },\n    closeDeviceData(device) {\n      if (device === \"lighting\") {\n        this.showLightingData = false;\n      } else if (device === \"water_heater\") {\n        this.showWaterHeaterData = false;\n      } else if (device === \"camera\") {\n        this.showCameraData = false;\n      } else if (device === \"aircon\") {\n        this.showAirData = false;\n      }\n    },\n    controlDevice(device, action) {\n      axios.post(`http://localhost:5050/api/device/${device}/${action}`).then(() => {\n        // 🔥 移除了未使用的 response\n        if (device === \"lighting\") {\n          this.lightingStatus = this.statusMapping[action] || \"OFF\";\n        } else if (device === \"water_heater\") {\n          this.waterHeaterStatus = this.statusMapping[action] || \"OFF\";\n        }\n        if (this.manualMode) {\n          this.syncCurrentState(device, action);\n        }\n      }).catch(error => {\n        console.error(`Failed to control ${device}:`, error);\n      });\n    },\n    syncCurrentState(device, action) {\n      axios.post(`http://localhost:5050/api/device/${device}/save-state`, {\n        status: action,\n        mode: this.manualMode ? \"on\" : \"off\"\n      }).then(() => {\n        console.log(`State synced for ${device}: ${action}, Mode: ${this.manualMode ? \"Manual\" : \"Auto\"}`);\n      }).catch(error => {\n        console.error(\"Failed to sync state:\", error);\n      });\n    },\n    toggleHeater() {\n      const action = this.waterHeaterStatus === \"OFF\" || this.waterHeaterStatus === \"N/A\" ? \"on\" : \"off\";\n      this.controlDevice(\"water_heater\", action);\n\n      // 切换按钮文字\n      this.heaterButtonText = action === \"on\" ? \"Turn Off\" : \"Turn On\";\n    },\n    goBack() {\n      this.$router.push('/home');\n    }\n  },\n  mounted() {\n    console.log(\"[初始化] 同步手动模式和设备状态\");\n    axios.get(\"http://localhost:5050/api/device/water_heater/current-status\").then(response => {\n      const {\n        manual_mode,\n        status\n      } = response.data;\n\n      // ✅ 恢复模式\n      this.manualMode = manual_mode === \"on\";\n      if (!this.manualMode) {\n        // 🔄 如果是自动模式\n        this.lightingStatus = \"N/A\";\n        this.waterHeaterStatus = \"N/A\";\n        this.coolingStatus = \"N/A\";\n        this.dehumidifyingStatus = \"N/A\";\n        this.heaterButtonText = \"Turn On\";\n      } else {\n        // ✅ 自动同步当前手动状态\n        this.syncLightingStatus();\n        this.syncWaterHeaterStatus();\n        this.syncAirconStatus();\n      }\n      console.log(`[模式同步] 当前模式: ${manual_mode}, 热水器状态: ${status}`);\n    }).catch(error => {\n      console.error(\"[错误] 获取设备状态失败: \", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","data","manualMode","lightingStatus","waterHeaterStatus","heaterButtonText","statusMapping","brighter","dimmer","off","on","dialogVisible","deviceData","currentDevice","lightingData","waterHeaterData","cameraStatus","cameraData","showCameraData","cameraStream","showLightingData","showWaterHeaterData","coolingStatus","dehumidifyingStatus","airConditionerData","showAirData","fixedStatus","lighting","water_heater","methods","toggleManualMode","console","log","localStorage","setItem","removeItem","post","manual_mode","then","response","message","catch","error","lightingState","getItem","heaterState","coolingState","dehumidifyState","updateFixedStatus","setCooling","state","syncCurrentState","setDehumidifying","enableCamera","navigator","mediaDevices","getUserMedia","video","stream","$nextTick","$refs","cameraVideo","srcObject","play","warn","err","disableCamera","getTracks","forEach","track","stop","viewDeviceData","device","get","stateRes","manual","manual_override","res","status","url","originalData","cooling_status","dehumidifying_status","refreshDeviceData","refreshed","syncLightingStatus","syncWaterHeaterStatus","syncAirconStatus","closeDeviceData","controlDevice","action","mode","toggleHeater","goBack","$router","push","mounted"],"sources":["src/views/DeviceControlPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"device-control-container\">\r\n    <!-- 页面顶部标题 -->\r\n    <h2 style=\"text-align: center; margin-top: 20px; margin-bottom: 20px; font-weight: bold;\">\r\n      Device Control\r\n    </h2>\r\n\r\n    <!-- 手动模式切换 -->\r\n    <el-switch\r\n      v-model=\"manualMode\"\r\n      active-text=\"Manual Mode\"\r\n      inactive-text=\"Auto Mode\"\r\n      @change=\"toggleManualMode\"\r\n    />\r\n\r\n    <!-- 第一行：Lighting 和 Water Heater -->\r\n    <el-row :gutter=\"20\" class=\"device-grid\">\r\n      <!-- 左上 - 灯光控制 -->\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" style=\"min-height: 320px;\">\r\n          <h3>Lighting Control</h3>\r\n          <p><strong>Status:</strong> {{ lightingStatus }}</p>\r\n          <el-button type=\"success\" @click=\"controlDevice('lighting', 'brighter')\" :disabled=\"!manualMode\">Brighter</el-button>\r\n          <el-button type=\"warning\" @click=\"controlDevice('lighting', 'dimmer')\" :disabled=\"!manualMode\">Dimmer</el-button>\r\n          <el-button type=\"danger\" @click=\"controlDevice('lighting', 'off')\" :disabled=\"!manualMode\">Turn Off</el-button>\r\n          <el-button type=\"primary\" @click=\"viewDeviceData('lighting')\" style=\"margin-left: 10px\">View Data</el-button>\r\n\r\n          <div v-if=\"showLightingData\" class=\"device-data-box\">\r\n            <h4>Latest Data:</h4>\r\n            <pre>{{ JSON.stringify(lightingData, null, 2) }}</pre>\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"refreshDeviceData('lighting')\">Refresh</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"closeDeviceData('lighting')\" style=\"margin-left: 5px;\">Close</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 右上 - 热水器 -->\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" style=\"min-height: 320px;\">\r\n          <h3>Water Heater</h3>\r\n          <p><strong>Status:</strong> {{ waterHeaterStatus }}</p>\r\n          <el-button type=\"primary\" @click=\"toggleHeater\" :disabled=\"!manualMode\">{{ heaterButtonText }}</el-button>\r\n          <el-button type=\"primary\" @click=\"viewDeviceData('water_heater')\" style=\"margin-left: 10px\">View Data</el-button>\r\n\r\n          <div v-if=\"showWaterHeaterData\" class=\"device-data-box\">\r\n            <h4>Latest Data:</h4>\r\n            <pre>{{ JSON.stringify(waterHeaterData, null, 2) }}</pre>\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"refreshDeviceData('water_heater')\">Refresh</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"closeDeviceData('water_heater')\" style=\"margin-left: 5px;\">Close</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 第二行：Camera 和 Air Conditioner -->\r\n    <el-row :gutter=\"20\" class=\"device-grid\">\r\n      <!-- 左下 - 摄像头 -->\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" style=\"min-height: 320px;\">\r\n          <h3>Surveillance Camera</h3>\r\n          <p><strong>Status:</strong> {{ manualMode ? cameraStatus : \"N/A\" }}</p>\r\n\r\n          <el-button type=\"primary\" @click=\"enableCamera\" :disabled=\"!manualMode || cameraStatus === 'on'\">Enable Camera</el-button>\r\n          <el-button type=\"danger\" @click=\"disableCamera\" :disabled=\"!manualMode || cameraStatus === 'off'\" style=\"margin-left: 5px\">Stop Camera</el-button>\r\n          <el-button type=\"primary\" @click=\"viewDeviceData('camera')\" style=\"margin-left: 5px\">View Data</el-button>\r\n\r\n          <div v-if=\"cameraStatus === 'on'\" class=\"camera-video-box\">\r\n            <video ref=\"cameraVideo\" autoplay muted playsinline style=\"width: 100%; border-radius: 6px; margin-top: 10px;\"></video>\r\n          </div>\r\n\r\n          <div v-if=\"showCameraData\" class=\"device-data-box\">\r\n            <h4>Latest Data:</h4>\r\n            <pre>{{ JSON.stringify(cameraData, null, 2) }}</pre>\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"refreshDeviceData('camera')\">Refresh</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"closeDeviceData('camera')\" style=\"margin-left: 5px;\">Close</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <!-- 右下 - 空调 -->\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\" style=\"min-height: 320px;\">\r\n          <h3>Air Conditioner</h3>\r\n          <p><strong>Cooling:</strong> {{ manualMode ? coolingStatus : \"N/A\" }}</p>\r\n          <p><strong>Dehumidifying:</strong> {{ manualMode ? dehumidifyingStatus : \"N/A\" }}</p>\r\n\r\n          <div style=\"margin-bottom: 10px;\">\r\n            <el-button type=\"success\" size=\"mini\" @click=\"setCooling('ON')\" :disabled=\"!manualMode\">Cooling (On)</el-button>\r\n            <el-button type=\"warning\" size=\"mini\" @click=\"setCooling('OFF')\" :disabled=\"!manualMode\" style=\"margin-left: 5px;\">Cooling (Off)</el-button>\r\n            <el-button type=\"success\" size=\"mini\" @click=\"setDehumidifying('ON')\" :disabled=\"!manualMode\" style=\"margin-left: 5px;\">Dehumidifying (On)</el-button>\r\n            <el-button type=\"warning\" size=\"mini\" @click=\"setDehumidifying('OFF')\" :disabled=\"!manualMode\" style=\"margin-left: 5px;\">Dehumidifying (Off)</el-button>\r\n          </div>\r\n\r\n          <el-button type=\"primary\" @click=\"viewDeviceData('aircon')\">View Data</el-button>\r\n\r\n          <div v-if=\"showAirData\" class=\"device-data-box\">\r\n            <h4>Latest Data:</h4>\r\n            <pre>{{ JSON.stringify(airConditionerData, null, 2) }}</pre>\r\n            <el-button type=\"primary\" size=\"mini\" @click=\"refreshDeviceData('aircon')\">Refresh</el-button>\r\n            <el-button type=\"danger\" size=\"mini\" @click=\"closeDeviceData('aircon')\" style=\"margin-left: 5px;\">Close</el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 返回按钮固定在左下角 -->\r\n    <el-button class=\"back-button\" type=\"info\" @click=\"goBack\">\r\n      Back to Home\r\n    </el-button>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      manualMode: false,\r\n      lightingStatus: \"N/A\",\r\n      waterHeaterStatus: \"N/A\",\r\n      heaterButtonText: \"Turn On\",\r\n      statusMapping: {\r\n        brighter: \"BRIGHTER\",\r\n        dimmer: \"DIMMER\",\r\n        off: \"OFF\",\r\n        on: \"ON\",\r\n      },\r\n        dialogVisible: false,\r\n        deviceData: {},\r\n        currentDevice: \"\",\r\n        lightingData: {},\r\n        waterHeaterData: {},\r\n        cameraStatus: \"N/A\",\r\n        cameraData: {},\r\n        showCameraData: false,\r\n        cameraStream: null,\r\n        showLightingData: false,\r\n        showWaterHeaterData: false,\r\n        coolingStatus: \"N/A\",\r\n        dehumidifyingStatus: \"N/A\",\r\n        airConditionerData: {},\r\n        showAirData: false,\r\n        fixedStatus: {\r\n           lighting: null,\r\n           water_heater: null\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    toggleManualMode() {\r\n  console.log(`[模式切换] 当前模式: ${this.manualMode ? 'Manual' : 'Auto'}`);\r\n\r\n  if (!this.manualMode) {\r\n    // ✅ 切换到自动模式\r\n    console.log(\"[切换到自动模式] 状态重置为 N/A\");\r\n\r\n    // 🔄 所有设备状态重置\r\n    this.lightingStatus = \"N/A\";\r\n    this.waterHeaterStatus = \"N/A\";\r\n    this.coolingStatus = \"N/A\";\r\n    this.dehumidifyingStatus = \"N/A\";\r\n    this.heaterButtonText = \"Turn On\";\r\n\r\n    // 🔄 清除本地存储\r\n    localStorage.setItem(\"manualMode\", \"false\");\r\n    localStorage.removeItem(\"lightingStatus\");\r\n    localStorage.removeItem(\"waterHeaterStatus\");\r\n    localStorage.removeItem(\"coolingStatus\");\r\n    localStorage.removeItem(\"dehumidifyingStatus\");\r\n\r\n    // 🔄 清除固定显示状态\r\n    this.fixedStatus = {\r\n      lighting: null,\r\n      water_heater: null\r\n    };\r\n\r\n    // ✅ 同步后端：切换为自动模式\r\n    axios.post(\"http://localhost:5050/api/device/toggle-mode\", {\r\n      manual_mode: \"off\"\r\n    })\r\n    .then((response) => {\r\n      console.log(\"[后端同步] 切换为自动模式:\", response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"[错误] 切换到自动模式失败:\", error);\r\n    });\r\n\r\n  } else {\r\n    // ✅ 切换到手动模式\r\n    console.log(\"[切换到手动模式] 恢复本地存储的状态\");\r\n\r\n    // 🔄 恢复灯光与热水器状态\r\n    const lightingState = localStorage.getItem(\"lightingStatus\");\r\n    const heaterState = localStorage.getItem(\"waterHeaterStatus\");\r\n\r\n    this.lightingStatus = lightingState ? lightingState : \"OFF\";\r\n    this.waterHeaterStatus = heaterState ? heaterState : \"OFF\";\r\n    this.heaterButtonText = this.waterHeaterStatus === \"ON\" ? \"Turn Off\" : \"Turn On\";\r\n\r\n    // 🔄 恢复空调 cooling / dehumidifying 状态\r\n    const coolingState = localStorage.getItem(\"coolingStatus\");\r\n    const dehumidifyState = localStorage.getItem(\"dehumidifyingStatus\");\r\n\r\n    this.coolingStatus = coolingState ? coolingState : \"OFF\";\r\n    this.dehumidifyingStatus = dehumidifyState ? dehumidifyState : \"OFF\";\r\n\r\n    // 🔄 写入本地存储\r\n    localStorage.setItem(\"manualMode\", \"true\");\r\n    localStorage.setItem(\"lightingStatus\", this.lightingStatus);\r\n    localStorage.setItem(\"waterHeaterStatus\", this.waterHeaterStatus);\r\n    localStorage.setItem(\"coolingStatus\", this.coolingStatus);\r\n    localStorage.setItem(\"dehumidifyingStatus\", this.dehumidifyingStatus);\r\n\r\n    // 🔄 初始化固定显示状态（用于 View Data）\r\n    this.updateFixedStatus(\"lighting\", this.lightingStatus);\r\n    this.updateFixedStatus(\"water_heater\", this.waterHeaterStatus);\r\n\r\n    // ✅ 同步后端：切换为手动模式\r\n    axios.post(\"http://localhost:5050/api/device/toggle-mode\", {\r\n      manual_mode: \"on\"\r\n    })\r\n    .then((response) => {\r\n      console.log(\"[后端同步] 切换为手动模式:\", response.data.message);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"[错误] 切换到手动模式失败:\", error);\r\n    });\r\n  }\r\n},\r\n\r\nsetCooling(state) {\r\n  this.coolingStatus = state;\r\n  localStorage.setItem(\"coolingStatus\", state);\r\n  this.syncCurrentState(\"aircon\", `COOLING_${state}`);\r\n},\r\n\r\nsetDehumidifying(state) {\r\n  this.dehumidifyingStatus = state;\r\n  localStorage.setItem(\"dehumidifyingStatus\", state);\r\n  this.syncCurrentState(\"aircon\", `DEHUMIDIFYING_${state}`);\r\n},\r\nenableCamera() {\r\n  if (!this.manualMode || this.cameraStatus === \"on\") return;\r\n\r\n  navigator.mediaDevices.getUserMedia({ video: true })\r\n    .then((stream) => {\r\n      this.cameraStream = stream;\r\n      this.cameraStatus = \"on\";\r\n\r\n      // 👇 不再强制控制 showCameraData，仅控制摄像头状态\r\n      this.$nextTick(() => {\r\n        const video = this.$refs.cameraVideo;\r\n        if (video) {\r\n          video.srcObject = stream;\r\n          video.play();\r\n        } else {\r\n          console.warn(\"cameraVideo ref not found — video element not rendered yet.\");\r\n        }\r\n      });\r\n\r\n      // axios.post(\"http://localhost:5050/api/device/camera/start\");\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Failed to enable camera:\", err);\r\n    });\r\n},\r\n\r\ndisableCamera() {\r\n  if (this.cameraStream) {\r\n    this.cameraStream.getTracks().forEach(track => track.stop());\r\n    this.cameraStream = null;\r\n  }\r\n\r\n  this.cameraStatus = \"off\";\r\n\r\n  // ✅ 清除视频画面\r\n  if (this.$refs.cameraVideo) {\r\n    this.$refs.cameraVideo.srcObject = null;\r\n  }\r\n\r\n  // ❌ 不再关闭 showCameraData，这样 View Data 区块可单独控制\r\n  // axios.post(\"http://localhost:5050/api/device/camera/stop\");\r\n},\r\n\r\n\r\nviewDeviceData(device) {\r\n  if (device === \"camera\") {\r\n    axios.get(\"http://localhost:5050/api/device/camera/manual-state\")\r\n      .then((stateRes) => {\r\n        const manual = stateRes.data.manual_override;\r\n\r\n        axios.get(\"http://localhost:5050/api/realtime-db/fps\")\r\n          .then((res) => {\r\n            const data = res.data;\r\n            data.status = manual === \"on\" ? this.cameraStatus : \"N/A\";\r\n            this.cameraData = data;\r\n            this.showCameraData = true;\r\n          });\r\n      });\r\n    return;\r\n  }\r\n\r\n  // ✅ 空调强制使用固定接口路径，避免动态拼接出错\r\n  const url = device === \"aircon\"\r\n    ? \"http://localhost:5050/api/device/aircon/view-data\"\r\n    : `http://localhost:5050/api/device/${device}/view-data`;\r\n\r\n  axios.get(url)\r\n    .then((response) => {\r\n      const originalData = response.data;\r\n\r\n      axios.get(`http://localhost:5050/api/device/${device}/manual-state`)\r\n        .then((stateRes) => {\r\n          const status = stateRes.data.status;\r\n          const manual = stateRes.data.manual_override;\r\n\r\n          if (device === \"lighting\" && manual === \"on\") {\r\n            this.updateFixedStatus(device, status);\r\n            originalData.status = this.fixedStatus.lighting;\r\n          }\r\n\r\n          if (device === \"water_heater\" && manual === \"on\") {\r\n            this.updateFixedStatus(device, status);\r\n            originalData.status = this.fixedStatus.water_heater;\r\n          }\r\n\r\n          if (device === \"aircon\" && manual === \"on\") {\r\n            originalData.cooling_status = this.coolingStatus;\r\n            originalData.dehumidifying_status = this.dehumidifyingStatus;\r\n          }\r\n\r\n          if (device === \"lighting\") {\r\n            this.lightingData = originalData;\r\n            this.showLightingData = true;\r\n          } else if (device === \"water_heater\") {\r\n            this.waterHeaterData = originalData;\r\n            this.showWaterHeaterData = true;\r\n          } else if (device === \"aircon\") {\r\n            this.airConditionerData = originalData;\r\n            this.showAirData = true;\r\n          }\r\n        });\r\n    });\r\n},\r\n\r\n\r\nrefreshDeviceData(device) {\r\n  if (device === \"camera\") {\r\n    this.viewDeviceData(\"camera\");\r\n    return;\r\n  }\r\n\r\n  const url = device === \"aircon\"\r\n    ? \"http://localhost:5050/api/device/aircon/view-data\"\r\n    : `http://localhost:5050/api/device/${device}/view-data`;\r\n\r\n  axios.get(url)\r\n    .then((response) => {\r\n      const refreshed = response.data;\r\n\r\n      axios.get(`http://localhost:5050/api/device/${device}/manual-state`)\r\n        .then((res) => {\r\n          const manual = res.data.manual_override;\r\n          const status = res.data.status;\r\n\r\n          if (manual === \"on\") {\r\n            this.updateFixedStatus(device, status);\r\n\r\n            if (device === \"lighting\") {\r\n              refreshed.status = this.fixedStatus.lighting;\r\n            } else if (device === \"water_heater\") {\r\n              refreshed.status = this.fixedStatus.water_heater;\r\n            } else if (device === \"aircon\") {\r\n              refreshed.cooling_status = this.coolingStatus;\r\n              refreshed.dehumidifying_status = this.dehumidifyingStatus;\r\n            }\r\n          }\r\n\r\n          if (device === \"lighting\") {\r\n            this.lightingData = refreshed;\r\n          } else if (device === \"water_heater\") {\r\n            this.waterHeaterData = refreshed;\r\n          } else if (device === \"aircon\") {\r\n            this.airConditionerData = refreshed;\r\n          }\r\n        });\r\n    });\r\n},\r\nsyncLightingStatus() {\r\n  axios.get(\"http://localhost:5050/api/device/lighting/manual-state\")\r\n    .then((res) => {\r\n      const status = res.data.status;\r\n      const manual = res.data.manual_override;\r\n      if (manual === \"on\") {\r\n        this.updateFixedStatus(\"lighting\", status);\r\n        this.lightingStatus = status;  // ✅ 使用原始状态显示在方框\r\n      }\r\n    });\r\n},\r\n\r\nsyncWaterHeaterStatus() {\r\n  axios.get(\"http://localhost:5050/api/device/water_heater/manual-state\")\r\n    .then((res) => {\r\n      const status = res.data.status;\r\n      const manual = res.data.manual_override;\r\n      if (manual === \"on\") {\r\n        this.updateFixedStatus(\"water_heater\", status);\r\n        this.waterHeaterStatus = status;  // ✅ 使用原始状态显示在方框\r\n        this.heaterButtonText = status === \"ON\" ? \"Turn Off\" : \"Turn On\";\r\n      }\r\n    });\r\n},\r\n\r\n\r\n  syncAirconStatus() {\r\n    axios.get(\"http://localhost:5050/api/device/aircon/manual-state\")\r\n      .then((res) => {\r\n        const manual = res.data.manual_override;\r\n        if (manual === \"on\") {\r\n          this.coolingStatus = res.data.cooling_status || \"ON\";\r\n          this.dehumidifyingStatus = res.data.dehumidifying_status || \"ON\";\r\n        }\r\n      });\r\n  },\r\n\r\nupdateFixedStatus(device, status) {\r\n  if (device === \"lighting\") {\r\n    if (status === \"BRIGHTER\") {\r\n      this.fixedStatus.lighting = \"on (Brighter)\";\r\n    } else if (status === \"DIMMER\") {\r\n      this.fixedStatus.lighting = \"on (Dimmer)\";\r\n    } else if (status === \"OFF\") {\r\n      this.fixedStatus.lighting = \"off\";\r\n    }\r\n  } else if (device === \"water_heater\") {\r\n    if (status === \"ON\") {\r\n      this.fixedStatus.water_heater = \"running\";\r\n    } else if (status === \"OFF\") {\r\n      this.fixedStatus.water_heater = \"stopped\";\r\n    }\r\n  }\r\n},\r\n\r\n\r\ncloseDeviceData(device) {\r\n  if (device === \"lighting\") {\r\n    this.showLightingData = false;\r\n  } else if (device === \"water_heater\") {\r\n    this.showWaterHeaterData = false;\r\n  } else if (device === \"camera\") {\r\n    this.showCameraData = false;\r\n  } else if (device === \"aircon\") {\r\n    this.showAirData = false;\r\n  }\r\n},\r\n\r\n\r\n    controlDevice(device, action) {\r\n      axios\r\n        .post(`http://localhost:5050/api/device/${device}/${action}`)\r\n        .then(() => {\r\n          // 🔥 移除了未使用的 response\r\n          if (device === \"lighting\") {\r\n            this.lightingStatus = this.statusMapping[action] || \"OFF\";\r\n          } else if (device === \"water_heater\") {\r\n            this.waterHeaterStatus = this.statusMapping[action] || \"OFF\";\r\n          }\r\n\r\n          if (this.manualMode) {\r\n            this.syncCurrentState(device, action);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to control ${device}:`, error);\r\n        });\r\n    },\r\n    syncCurrentState(device, action) {\r\n      axios.post(`http://localhost:5050/api/device/${device}/save-state`, {\r\n        status: action,\r\n        mode: this.manualMode ? \"on\" : \"off\"\r\n      })\r\n      .then(() => {\r\n        console.log(`State synced for ${device}: ${action}, Mode: ${this.manualMode ? \"Manual\" : \"Auto\"}`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Failed to sync state:\", error);\r\n      });\r\n    },\r\n    toggleHeater() {\r\n      const action = this.waterHeaterStatus === \"OFF\" || this.waterHeaterStatus === \"N/A\" ? \"on\" : \"off\";\r\n      this.controlDevice(\"water_heater\", action);\r\n\r\n      // 切换按钮文字\r\n      this.heaterButtonText = action === \"on\" ? \"Turn Off\" : \"Turn On\";\r\n    },\r\n    goBack() {\r\n      this.$router.push('/home');\r\n    }\r\n  },\r\n  mounted() {\r\n  console.log(\"[初始化] 同步手动模式和设备状态\");\r\n\r\n  axios.get(\"http://localhost:5050/api/device/water_heater/current-status\")\r\n    .then((response) => {\r\n      const { manual_mode, status } = response.data;\r\n\r\n      // ✅ 恢复模式\r\n      this.manualMode = manual_mode === \"on\";\r\n\r\n      if (!this.manualMode) {\r\n        // 🔄 如果是自动模式\r\n        this.lightingStatus = \"N/A\";\r\n        this.waterHeaterStatus = \"N/A\";\r\n        this.coolingStatus = \"N/A\";\r\n        this.dehumidifyingStatus = \"N/A\";\r\n        this.heaterButtonText = \"Turn On\";\r\n      } else {\r\n        // ✅ 自动同步当前手动状态\r\n        this.syncLightingStatus();\r\n        this.syncWaterHeaterStatus();\r\n        this.syncAirconStatus();\r\n      }\r\n\r\n      console.log(`[模式同步] 当前模式: ${manual_mode}, 热水器状态: ${status}`);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"[错误] 获取设备状态失败: \", error);\r\n    });\r\n},\r\n\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.device-control-container {\r\n  padding: 20px;\r\n  min-height: 140vh; /* ✅ 让两行卡片足够展开空间 */\r\n  box-sizing: border-box;\r\n}\r\n\r\n.device-grid {\r\n  margin-top: 20px;\r\n}\r\n\r\n.back-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 20px;\r\n}\r\n\r\n/* ✅ 所有设备的数据展示区域 */\r\n.device-data-box {\r\n  background-color: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n  margin-top: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: monospace;\r\n  font-size: 13px;\r\n  max-height: 120px;\r\n  overflow-y: auto;\r\n}\r\n\r\n/* ✅ 所有普通设备卡片统一高度（包括展开 View Data 后） */\r\n.el-card {\r\n  min-height: 580px; /* ✅ 与摄像头一致，防止点击后撑高或错位 */\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n/* ✅ 摄像头卡片类名（可单独样式） */\r\n.camera-card {\r\n  min-height: 580px; /* ✅ 与普通设备一致，保持整齐 */\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n/* ✅ 摄像头视频展示区域（高度加大） */\r\n.camera-video-box {\r\n  margin-top: 10px;\r\n  overflow: hidden;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  height: 360px; /* ✅ 原为320，加大用于完整展示 */\r\n}\r\n\r\n/* ✅ 视频填满容器但不拉伸 */\r\n.camera-video-box video {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n/* ✅ 响应式顺序（摄像头排在下方） */\r\n@media (min-width: 768px) {\r\n  .camera-col {\r\n    order: 2;\r\n  }\r\n  .heater-col {\r\n    order: 1;\r\n  }\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}