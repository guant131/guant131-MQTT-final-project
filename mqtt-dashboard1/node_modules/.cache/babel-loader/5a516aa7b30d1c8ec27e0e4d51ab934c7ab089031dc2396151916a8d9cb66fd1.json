{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      historicalData: [],\n      displayedHistoricalData: [],\n      maxIntensity: null,\n      maxIntensityTime: null,\n      maxIntensityStatus: null,\n      minIntensity: null,\n      minIntensityTime: null,\n      minIntensityStatus: null,\n      searchTime: '',\n      searchResult: null,\n      searchPerformed: false\n    };\n  },\n  created() {\n    this.fetchHistoricalData();\n  },\n  methods: {\n    formatStatus(row) {\n      return row.status === 'on' ? 'On' : 'Off';\n    },\n    fetchHistoricalData() {\n      axios.get('http://localhost:5050/api/history/light_control').then(res => {\n        this.historicalData = res.data.history || [];\n        this.displayedHistoricalData = this.historicalData.slice(0, 30);\n        this.calculateIntensityInfo();\n      }).catch(err => {\n        console.error('Failed to fetch historical data:', err);\n      });\n    },\n    goBack() {\n      this.$router.back();\n    },\n    calculateIntensityInfo() {\n      if (this.historicalData.length === 0) {\n        return;\n      }\n      let maxInt = this.historicalData[0].intensity;\n      let maxIntTime = this.historicalData[0].timestamp;\n      let maxIntStatus = this.historicalData[0].status;\n      let minInt = this.historicalData[0].intensity;\n      let minIntTime = this.historicalData[0].timestamp;\n      let minIntStatus = this.historicalData[0].status;\n      for (let data of this.historicalData) {\n        if (data.intensity > maxInt) {\n          maxInt = data.intensity;\n          maxIntTime = data.timestamp;\n          maxIntStatus = data.status;\n        }\n        if (data.intensity < minInt) {\n          minInt = data.intensity;\n          minIntTime = data.timestamp;\n          minIntStatus = data.status;\n        }\n      }\n      this.maxIntensity = maxInt;\n      this.maxIntensityTime = maxIntTime;\n      this.maxIntensityStatus = maxIntStatus;\n      this.minIntensity = minInt;\n      this.minIntensityTime = minIntTime;\n      this.minIntensityStatus = minIntStatus;\n    },\n    searchByTime() {\n      this.searchPerformed = true;\n      this.searchResult = this.historicalData.find(data => data.timestamp === this.searchTime);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","historicalData","displayedHistoricalData","maxIntensity","maxIntensityTime","maxIntensityStatus","minIntensity","minIntensityTime","minIntensityStatus","searchTime","searchResult","searchPerformed","created","fetchHistoricalData","methods","formatStatus","row","status","get","then","res","history","slice","calculateIntensityInfo","catch","err","console","error","goBack","$router","back","length","maxInt","intensity","maxIntTime","timestamp","maxIntStatus","minInt","minIntTime","minIntStatus","searchByTime","find"],"sources":["src/views/LightingControllerHistory.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"header-container\">\n      <h2>Lighting Controller History Data</h2>\n      <el-button size=\"small\" type=\"primary\" @click=\"fetchHistoricalData\">Refresh</el-button>\n    </div>\n    <!-- The newly added light intensity information window -->\n    <el-card class=\"intensity-info-card\">\n      <div slot=\"header\">Light Intensity Information</div>\n      <div class=\"info-content\">\n        <p>Max Light Intensity: {{ maxIntensity }} Lux at {{ maxIntensityTime }} (Status: {{ maxIntensityStatus }})</p>\n        <p>Min Light Intensity: {{ minIntensity }} Lux at {{ minIntensityTime }} (Status: {{ minIntensityStatus }})</p>\n      </div>\n    </el-card>\n    <!-- The newly added time search window -->\n    <el-card class=\"search-info-card\">\n      <div slot=\"header\">Search by Time</div>\n      <div class=\"info-content\">\n        <el-input v-model=\"searchTime\" placeholder=\"Enter timestamp\" @keyup.enter=\"searchByTime\"></el-input>\n        <el-button @click=\"searchByTime\">Search</el-button>\n        <p v-if=\"searchResult\">Light Intensity: {{ searchResult.intensity }} Lux, Status: {{ formatStatus(searchResult) }}</p>\n        <p v-else-if=\"searchPerformed &&!searchResult\">No data found for the given time.</p>\n      </div>\n    </el-card>\n    <el-card>\n      <div slot=\"header\">History Data List</div>\n      <div class=\"history-data-scroll\">\n        <table class=\"history-table\">\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>Light Control Status</th>\n              <th>Light Intensity (Lux)</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(data, index) in displayedHistoricalData\" :key=\"index\">\n              <td>{{ data.timestamp }}</td>\n              <td>{{ formatStatus(data) }}</td>\n              <td>{{ data.intensity }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </el-card>\n    <div class=\"back-container\">\n      <el-button type=\"primary\" round @click=\"goBack\">Back</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      historicalData: [],\n      displayedHistoricalData: [],\n      maxIntensity: null,\n      maxIntensityTime: null,\n      maxIntensityStatus: null,\n      minIntensity: null,\n      minIntensityTime: null,\n      minIntensityStatus: null,\n      searchTime: '',\n      searchResult: null,\n      searchPerformed: false\n    };\n  },\n  created() {\n    this.fetchHistoricalData();\n  },\n  methods: {\n    formatStatus(row) {\n      return row.status === 'on' ? 'On' : 'Off';\n    },\n    fetchHistoricalData() {\n      axios.get('http://localhost:5050/api/history/light_control')\n        .then(res => {\n          this.historicalData = res.data.history || [];\n          this.displayedHistoricalData = this.historicalData.slice(0, 30);\n          this.calculateIntensityInfo();\n        })\n        .catch(err => {\n          console.error('Failed to fetch historical data:', err);\n        });\n    },\n    goBack() {\n      this.$router.back();\n    },\n    calculateIntensityInfo() {\n      if (this.historicalData.length === 0) {\n        return;\n      }\n      let maxInt = this.historicalData[0].intensity;\n      let maxIntTime = this.historicalData[0].timestamp;\n      let maxIntStatus = this.historicalData[0].status;\n      let minInt = this.historicalData[0].intensity;\n      let minIntTime = this.historicalData[0].timestamp;\n      let minIntStatus = this.historicalData[0].status;\n\n      for (let data of this.historicalData) {\n        if (data.intensity > maxInt) {\n          maxInt = data.intensity;\n          maxIntTime = data.timestamp;\n          maxIntStatus = data.status;\n        }\n        if (data.intensity < minInt) {\n          minInt = data.intensity;\n          minIntTime = data.timestamp;\n          minIntStatus = data.status;\n        }\n      }\n\n      this.maxIntensity = maxInt;\n      this.maxIntensityTime = maxIntTime;\n      this.maxIntensityStatus = maxIntStatus;\n      this.minIntensity = minInt;\n      this.minIntensityTime = minIntTime;\n      this.minIntensityStatus = minIntStatus;\n    },\n    searchByTime() {\n      this.searchPerformed = true;\n      this.searchResult = this.historicalData.find(data => data.timestamp === this.searchTime);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.header-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.intensity-info-card,\n.search-info-card {\n  margin-bottom: 20px;\n}\n\n.info-content {\n  padding: 10px;\n}\n\n.history-data-scroll {\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.history-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.history-table th,\n.history-table td {\n  border: 1px solid #ccc;\n  padding: 8px;\n  text-align: center;\n}\n\n.back-container {\n  margin-top: 40px;\n  text-align: center;\n}\n</style>"],"mappings":";;AAoDA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,uBAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,kBAAA;MACAC,UAAA;MACAC,YAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,mBAAA;EACA;EACAC,OAAA;IACAC,aAAAC,GAAA;MACA,OAAAA,GAAA,CAAAC,MAAA;IACA;IACAJ,oBAAA;MACAd,KAAA,CAAAmB,GAAA,oDACAC,IAAA,CAAAC,GAAA;QACA,KAAAnB,cAAA,GAAAmB,GAAA,CAAApB,IAAA,CAAAqB,OAAA;QACA,KAAAnB,uBAAA,QAAAD,cAAA,CAAAqB,KAAA;QACA,KAAAC,sBAAA;MACA,GACAC,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,KAAA,qCAAAF,GAAA;MACA;IACA;IACAG,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAP,uBAAA;MACA,SAAAtB,cAAA,CAAA8B,MAAA;QACA;MACA;MACA,IAAAC,MAAA,QAAA/B,cAAA,IAAAgC,SAAA;MACA,IAAAC,UAAA,QAAAjC,cAAA,IAAAkC,SAAA;MACA,IAAAC,YAAA,QAAAnC,cAAA,IAAAgB,MAAA;MACA,IAAAoB,MAAA,QAAApC,cAAA,IAAAgC,SAAA;MACA,IAAAK,UAAA,QAAArC,cAAA,IAAAkC,SAAA;MACA,IAAAI,YAAA,QAAAtC,cAAA,IAAAgB,MAAA;MAEA,SAAAjB,IAAA,SAAAC,cAAA;QACA,IAAAD,IAAA,CAAAiC,SAAA,GAAAD,MAAA;UACAA,MAAA,GAAAhC,IAAA,CAAAiC,SAAA;UACAC,UAAA,GAAAlC,IAAA,CAAAmC,SAAA;UACAC,YAAA,GAAApC,IAAA,CAAAiB,MAAA;QACA;QACA,IAAAjB,IAAA,CAAAiC,SAAA,GAAAI,MAAA;UACAA,MAAA,GAAArC,IAAA,CAAAiC,SAAA;UACAK,UAAA,GAAAtC,IAAA,CAAAmC,SAAA;UACAI,YAAA,GAAAvC,IAAA,CAAAiB,MAAA;QACA;MACA;MAEA,KAAAd,YAAA,GAAA6B,MAAA;MACA,KAAA5B,gBAAA,GAAA8B,UAAA;MACA,KAAA7B,kBAAA,GAAA+B,YAAA;MACA,KAAA9B,YAAA,GAAA+B,MAAA;MACA,KAAA9B,gBAAA,GAAA+B,UAAA;MACA,KAAA9B,kBAAA,GAAA+B,YAAA;IACA;IACAC,aAAA;MACA,KAAA7B,eAAA;MACA,KAAAD,YAAA,QAAAT,cAAA,CAAAwC,IAAA,CAAAzC,IAAA,IAAAA,IAAA,CAAAmC,SAAA,UAAA1B,UAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}