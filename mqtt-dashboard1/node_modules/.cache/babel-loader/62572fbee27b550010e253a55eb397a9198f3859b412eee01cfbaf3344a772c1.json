{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'PersonalDataPage',\n  data() {\n    return {\n      userData: {\n        username: '',\n        phone: '',\n        email: '',\n        idNumber: '',\n        homeAddress: '',\n        company: '',\n        companyAddress: '',\n        oldPassword: '',\n        newPassword: '',\n        confirmNewPassword: ''\n      },\n      loading: {\n        update: false\n      },\n      showChangePassword: false,\n      rules: {\n        phone: [{\n          required: true,\n          message: 'Please enter phone number',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: 'Please enter email',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: 'Invalid email address',\n          trigger: 'blur'\n        }],\n        idNumber: [{\n          required: true,\n          message: 'Please enter ID number',\n          trigger: 'blur'\n        }],\n        homeAddress: [{\n          required: true,\n          message: 'Please enter home address',\n          trigger: 'blur'\n        }],\n        company: [{\n          required: true,\n          message: 'Please enter company name',\n          trigger: 'blur'\n        }],\n        companyAddress: [{\n          required: true,\n          message: 'Please enter company address',\n          trigger: 'blur'\n        }],\n        oldPassword: [{\n          required: true,\n          message: 'Please enter old password',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: 'Please enter new password',\n          trigger: 'blur'\n        }],\n        confirmNewPassword: [{\n          required: true,\n          message: 'Please confirm new password',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            if (value !== this.userData.newPassword) {\n              callback(new Error('Passwords do not match'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    fetchUserInfo() {\n      axios.get(`http://localhost:5050/api/user?username=${localStorage.getItem('username')}`).then(res => {\n        this.userData = res.data.data;\n      }).catch(() => {\n        this.$message.error('Failed to fetch user data');\n      });\n    },\n    updateUserInfo() {\n      this.$refs.userFormRef.validate(valid => {\n        if (!valid) return;\n        this.loading.update = true;\n        axios.put('http://localhost:5050/api/user', this.userData).then(() => {\n          this.$message.success('User data updated successfully');\n          this.fetchUserInfo();\n        }).catch(() => {\n          this.$message.error('Failed to update user data');\n        }).finally(() => {\n          this.loading.update = false;\n        });\n      });\n    },\n    goBack() {\n      this.$router.push('/home');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userData","username","phone","email","idNumber","homeAddress","company","companyAddress","oldPassword","newPassword","confirmNewPassword","loading","update","showChangePassword","rules","required","message","trigger","type","validator","rule","value","callback","Error","created","fetchUserInfo","methods","get","localStorage","getItem","then","res","catch","$message","error","updateUserInfo","$refs","userFormRef","validate","valid","put","success","finally","goBack","$router","push"],"sources":["src/views/PersonalDataPage.vue"],"sourcesContent":["<template>\n  <div class=\"personal-data-container\">\n    <el-card class=\"personal-data-card\">\n      <h2 class=\"personal-title\">Personal Data</h2>\n      <el-form :model=\"userData\" :rules=\"rules\" ref=\"userFormRef\" label-width=\"170px\">\n        <el-form-item label=\"Username\" prop=\"username\">\n          <el-input v-model=\"userData.username\" disabled />\n        </el-form-item>\n\n        <el-form-item label=\"Phone\" prop=\"phone\">\n          <el-input v-model=\"userData.phone\" placeholder=\"Enter phone number\" />\n        </el-form-item>\n\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"userData.email\" placeholder=\"Enter email address\" />\n        </el-form-item>\n\n        <el-form-item label=\"ID Number\" prop=\"idNumber\">\n          <el-input v-model=\"userData.idNumber\" placeholder=\"Enter ID number\" />\n        </el-form-item>\n\n        <el-form-item label=\"Home Address\" prop=\"homeAddress\">\n          <el-input v-model=\"userData.homeAddress\" placeholder=\"Enter home address\" />\n        </el-form-item>\n\n        <el-form-item label=\"Company\" prop=\"company\">\n          <el-input v-model=\"userData.company\" placeholder=\"Enter company name\" />\n        </el-form-item>\n\n        <el-form-item label=\"Company Address\" prop=\"companyAddress\">\n          <el-input v-model=\"userData.companyAddress\" placeholder=\"Enter company address\" />\n        </el-form-item>\n\n        <!-- Password Change Section -->\n        <template v-if=\"showChangePassword\">\n          <el-form-item label=\"Old Password\" prop=\"oldPassword\">\n            <el-input v-model=\"userData.oldPassword\" type=\"password\" placeholder=\"Enter old password\" />\n          </el-form-item>\n\n          <el-form-item label=\"New Password\" prop=\"newPassword\">\n            <el-input v-model=\"userData.newPassword\" type=\"password\" placeholder=\"Enter new password\" />\n          </el-form-item>\n\n          <el-form-item label=\"Confirm New Password\" prop=\"confirmNewPassword\">\n            <el-input v-model=\"userData.confirmNewPassword\" type=\"password\" placeholder=\"Confirm new password\" />\n          </el-form-item>\n        </template>\n\n        <!-- Buttons -->\n        <el-form-item>\n          <div class=\"btn-group\">\n            <el-button type=\"warning\" @click=\"showChangePassword = !showChangePassword\">\n              {{ showChangePassword ? 'Cancel Change' : 'Change Password' }}\n            </el-button>\n            <el-button type=\"primary\" @click=\"updateUserInfo\" :loading=\"loading.update\">Update</el-button>\n            <el-button @click=\"goBack\">Back</el-button>\n          </div>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'PersonalDataPage',\n  data() {\n    return {\n      userData: {\n        username: '',\n        phone: '',\n        email: '',\n        idNumber: '',\n        homeAddress: '',\n        company: '',\n        companyAddress: '',\n        oldPassword: '',\n        newPassword: '',\n        confirmNewPassword: ''\n      },\n      loading: { update: false },\n      showChangePassword: false,\n      rules: {\n        phone: [{ required: true, message: 'Please enter phone number', trigger: 'blur' }],\n        email: [\n          { required: true, message: 'Please enter email', trigger: 'blur' },\n          { type: 'email', message: 'Invalid email address', trigger: 'blur' }\n        ],\n        idNumber: [{ required: true, message: 'Please enter ID number', trigger: 'blur' }],\n        homeAddress: [{ required: true, message: 'Please enter home address', trigger: 'blur' }],\n        company: [{ required: true, message: 'Please enter company name', trigger: 'blur' }],\n        companyAddress: [{ required: true, message: 'Please enter company address', trigger: 'blur' }],\n        oldPassword: [{ required: true, message: 'Please enter old password', trigger: 'blur' }],\n        newPassword: [{ required: true, message: 'Please enter new password', trigger: 'blur' }],\n        confirmNewPassword: [\n          { required: true, message: 'Please confirm new password', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              if (value !== this.userData.newPassword) {\n                callback(new Error('Passwords do not match'))\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    };\n  },\n  created() {\n    this.fetchUserInfo();\n  },\n  methods: {\n    fetchUserInfo() {\n      axios.get(`http://localhost:5050/api/user?username=${localStorage.getItem('username')}`)\n        .then(res => {\n          this.userData = res.data.data;\n        })\n        .catch(() => {\n          this.$message.error('Failed to fetch user data');\n        });\n    },\n    updateUserInfo() {\n      this.$refs.userFormRef.validate(valid => {\n        if (!valid) return;\n        this.loading.update = true;\n        axios.put('http://localhost:5050/api/user', this.userData)\n          .then(() => {\n            this.$message.success('User data updated successfully');\n            this.fetchUserInfo();\n          })\n          .catch(() => {\n            this.$message.error('Failed to update user data');\n          })\n          .finally(() => {\n            this.loading.update = false;\n          });\n      });\n    },\n    goBack() {\n      this.$router.push('/home');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.personal-data-container {\n  padding: 40px;\n  background-color: #f5f7fa;\n}\n\n.personal-data-card {\n  width: 560px;\n  margin: 0 auto;\n  padding: 30px 20px;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);\n}\n\n.personal-title {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.btn-group {\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n}\n</style>\n\n"],"mappings":";AAgEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,KAAA;QACAC,KAAA;QACAC,QAAA;QACAC,WAAA;QACAC,OAAA;QACAC,cAAA;QACAC,WAAA;QACAC,WAAA;QACAC,kBAAA;MACA;MACAC,OAAA;QAAAC,MAAA;MAAA;MACAC,kBAAA;MACAC,KAAA;QACAZ,KAAA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAd,KAAA,GACA;UAAAY,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,IAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA,EACA;QACAb,QAAA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAZ,WAAA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAX,OAAA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAV,cAAA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAT,WAAA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAR,WAAA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAP,kBAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAE,SAAA,EAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,IAAAD,KAAA,UAAArB,QAAA,CAAAS,WAAA;cACAa,QAAA,KAAAC,KAAA;YACA;cACAD,QAAA;YACA;UACA;UACAL,OAAA;QACA;MAEA;IACA;EACA;EACAO,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACAD,cAAA;MACA5B,KAAA,CAAA8B,GAAA,4CAAAC,YAAA,CAAAC,OAAA,gBACAC,IAAA,CAAAC,GAAA;QACA,KAAA/B,QAAA,GAAA+B,GAAA,CAAAhC,IAAA,CAAAA,IAAA;MACA,GACAiC,KAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,eAAA;MACA,KAAAC,KAAA,CAAAC,WAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,KAAAA,KAAA;QACA,KAAA5B,OAAA,CAAAC,MAAA;QACAf,KAAA,CAAA2C,GAAA,wCAAAxC,QAAA,EACA8B,IAAA;UACA,KAAAG,QAAA,CAAAQ,OAAA;UACA,KAAAhB,aAAA;QACA,GACAO,KAAA;UACA,KAAAC,QAAA,CAAAC,KAAA;QACA,GACAQ,OAAA;UACA,KAAA/B,OAAA,CAAAC,MAAA;QACA;MACA;IACA;IACA+B,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}